//concat()

/* –Ñ –¥–≤–∞ —Ä—è–¥–∫–∏: 'Hello, ' —ñ 'World!'. –û–±'—î–¥–Ω–∞–π —ó—Ö —É –∑–º—ñ–Ω–Ω—É greeting.


–°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é combineNames(firstName, lastName), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω–µ —ñ–º'—è.

*/
const firstWord = "Hello,";
const secondWord = "World!";
const greeting = firstWord.concat(' ' + secondWord);
console.log(greeting)

function combineNames(firstName, lastName){
    const fullName = firstName.concat(' ' + lastName)
    return fullName
}

/*endsWith()

–ü–µ—Ä–µ–≤—ñ—Ä, —á–∏ —Ä—è–¥–æ–∫ "report.pdf" –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ ".pdf".

–Ñ —Å–ø–∏—Å–æ–∫ email-–∞–¥—Ä–µ—Å. –í–∏–≤–µ–¥–∏ —Ç—ñ–ª—å–∫–∏ —Ç—ñ, —è–∫—ñ –∑–∞–∫—ñ–Ω—á—É—é—Ç—å—Å—è –Ω–∞ "@gmail.com".

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é isSentence(sentence), —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —Ä—è–¥–æ–∫ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –∫—Ä–∞–ø–∫–æ—é, –∑–Ω–∞–∫–æ–º –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –æ–∫–ª–∏–∫—É. 

*/

const fileName = "report.pdf";
const isPdf = fileName.endsWith(".pdf")
console.log(isPdf)

const mailList = [
    'ivan@gmail.com',
  'anna@yahoo.com',
  'peter@gmail.com',
  'maria@hotmail.com'
]; 
const gmailList = mailList.filter(email => email.endsWith('@gmail.com'));

console.log(gmailList);

function isSentence(sentence){
    return sentence.endsWith('.') || sentence.endsWith('?') || sentence.endsWith('!');

}

console.log(isSentence('!'))
/*
üß† –ó–∞–≤–¥–∞–Ω–Ω—è 1 ‚Äî includes()
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é hasLogin(text), —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –≤ —Ä—è–¥–∫—É —î —Å–ª–æ–≤–æ "login".
*/

function hasLogin(text) {
    return text.includes('login')
}
const hasLoginResult = hasLogin("iouibiib")
console.log(hasLoginResult)
/*–ü–∏—Ç–∞–Ω–Ω—è: –ß–æ–º—É –∫–æ–ª–∏ —Ä–æ–±–ª—é –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó —á–µ—Ä–µ–∑ console.log –º–µ–Ω—ñ –≤–∏–¥–∞—î –ø–æ–≤–Ω–∏–π —Ä—è–¥–æ–∫ –∫–æ–¥—É –∞ –Ω–µ true —á–∏ false ? 
console.log(hasLogin)  –≤–∏–¥–∞—î 
∆í hasLogin(text) {
 return text.includes('login')
}*/

/*üß† –ó–∞–≤–¥–∞–Ω–Ω—è 2 ‚Äî indexOf()

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findAt(text), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–∑–∏—Ü—ñ—é —Å–∏–º–≤–æ–ª—É '@' –≤ email-–∞–¥—Ä–µ—Å—ñ. –Ø–∫—â–æ –Ω–µ–º–∞—î ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î -1. */

function findAt(text){ 
    return text.indexOf('@')

}
/*  

slice()

‚úèÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é cutWord(word), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–µ—Ä—à—ñ 3 –ª—ñ—Ç–µ—Ä–∏ —Å–ª–æ–≤–∞.

*/

function cutWord(word){
    return word.slice(0, 3)
}

/*  split()

‚úèÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getWords(sentence), —è–∫–∞ —Ä–æ–∑–¥—ñ–ª—è—î —Ä–µ—á–µ–Ω–Ω—è –Ω–∞ —Å–ª–æ–≤–∞.

*/

function getWords(sentence) {
    return sentence.split(' ')
}

/*  trim()

‚úèÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é cleanInput(input), —è–∫–∞ –ø—Ä–∏–±–∏—Ä–∞—î –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏ –∑ –ø–æ—á–∞—Ç–∫—É —ñ –∫—ñ–Ω—Ü—è —Ä—è–¥–∫–∞.
*/
function cleanInput(input){
return input.trim()
}

/* 
padStart() ‚Äî —Ñ–æ—Ä–º–∞—Ç –≥–æ–¥–∏–Ω–Ω–∏–∫–∞
–ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes, seconds), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ mm:ss.
–ö–æ–∂–Ω–µ —á–∏—Å–ª–æ –º–∞—î –±—É—Ç–∏ –¥–≤–æ–∑–Ω–∞—á–Ω–µ ‚Äî –¥–æ–¥–∞–π 0, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
*/

function formatTime(minutes, seconds){
    const min = String(minutes).padStart(2, '0');
    const sec = String(seconds).padStart(2, '0');
    return `${min}:${sec}`;
}
console.log(formatTime(5, 9))
console.log(formatTime(12, 3))

/* 
2. padEnd() ‚Äî –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è –≤ —Ç–∞–±–ª–∏—Ü—ñ
–ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatRow(label, value), —è–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É—î –ø–∞—Ä—É —è–∫ —Ä—è–¥–æ–∫ —Ç–∞–±–ª–∏—Ü—ñ.
label –º–∞—î –±—É—Ç–∏ —à–∏—Ä–∏–Ω–æ—é 10 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–∏—Ä—ñ–≤–Ω—è–Ω–µ –∑–ª—ñ–≤–∞, value ‚Äî —Å–ø—Ä–∞–≤–∞.
*/

function formatRow(label, value){
    const sheet= label.padEnd(10) + value;
    return sheet
}

/* 
üîπ 3. repeat() ‚Äî –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑—ñ—Ä–æ—á–æ–∫
–ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é generateStars(n), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ n –∑—ñ—Ä–æ—á–æ–∫ *.
*/
function generateStars(n){
    const stars = "*".repeat(n)
    return stars
}
console.log(generateStars(4))

/* 
üîπ 4. replace() ‚Äî –∞–≤—Ç–æ–∫–æ—Ä–µ–∫—Ü—ñ—è
–ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é fixText(text), —è–∫–∞ –≤–∏–ø—Ä–∞–≤–ª—è—î –ø–µ—Ä—à—É –ø–æ–º–∏–ª–∫—É "hte" –Ω–∞ "the".
*/
function fixText(text){
    const fixMistakes = text.replace('hte', 'the');
    return fixMistakes
}
console.log(fixText("Im hte best"))

/* 
üîπ 5. replaceAll() ‚Äî —Ü–µ–Ω–∑—É—Ä–∞
–ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é censor(text), —è–∫–∞ –∑–∞–º—ñ–Ω—é—î –≤—Å—ñ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è —Å–ª–æ–≤–∞ "bad" –Ω–∞ "***".
*/

function censor(text){
    const censored = text.replaceAll("bad", "***")
    return censored
}
console.log(censor("Im very bad guy"))

/* 
üîπ 6. search() ‚Äî –ø–æ–∑–∏—Ü—ñ—è –ø–µ—Ä—à–æ–≥–æ —Å–∏–º–≤–æ–ª—É
–ó–∞–≤–¥–∞–Ω–Ω—è:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findAtSymbol(email), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–∑–∏—Ü—ñ—é —Å–∏–º–≤–æ–ª—É @ —É —Ä—è–¥–∫—É.
*/

function findAtSymbol(email){
    const findOut = email.search("@")
    return findOut
}
console.log(findAtSymbol("la@gmail.com"))